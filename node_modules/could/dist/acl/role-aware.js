"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const helper_1 = require("./helper");
class RoleAware {
    constructor(storage, name) {
        this.storage = storage;
        this.name = name;
    }
    can(action, resource) {
        return __awaiter(this, void 0, void 0, function* () {
            const role = yield this.storage.getRole(this.name);
            if (role) {
                const policies = (yield Promise.all((role.policies || []).map(policy => this.storage.getPolicy(policy))));
                const allows = [
                    ...(role.allows || []),
                    ...policies.reduce((carry, policy) => {
                        return [...carry, ...(policy && policy.allows) || []];
                    }, []),
                ];
                const denies = [
                    ...(role.denies || []),
                    ...policies.reduce((carry, policy) => {
                        return [...carry, ...(policy && policy.denies) || []];
                    }, []),
                ];
                return yield helper_1.can({ allows: [...new Set(allows)], denies: [...new Set(denies)] }, action, resource);
            }
            return false;
        });
    }
    cannot(action, resource) {
        return __awaiter(this, void 0, void 0, function* () {
            return !(yield this.can(action, resource));
        });
    }
}
exports.RoleAware = RoleAware;
//# sourceMappingURL=role-aware.js.map