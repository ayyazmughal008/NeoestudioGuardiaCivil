import { GroupAcl, PolicyAcl, RoleAcl, UserAcl } from "../../interfaces/acl";
import { Storage } from "../../interfaces/driver";
export declare class MemoryStorage implements Storage {
    users: Map<string, UserAcl>;
    roles: Map<string, RoleAcl>;
    groups: Map<string, GroupAcl>;
    policies: Map<string, PolicyAcl>;
    constructor({ users, roles, groups, policies }?: {
        users?: UserAcl[];
        roles?: RoleAcl[];
        groups?: RoleAcl[];
        policies?: PolicyAcl[];
    });
    getRole(name: string): Promise<RoleAcl | undefined>;
    storeRole(role: RoleAcl): Promise<void>;
    destroyRole(name: string): Promise<void>;
    getUser(name: string): Promise<UserAcl | undefined>;
    storeUser(user: UserAcl): Promise<void>;
    destroyUser(name: string): Promise<void>;
    getGroup(name: string): Promise<GroupAcl | undefined>;
    storeGroup(group: GroupAcl): Promise<void>;
    destroyGroup(name: string): Promise<void>;
    getPolicy(name: string): Promise<PolicyAcl | undefined>;
    storePolicy(policy: PolicyAcl): Promise<void>;
    destroyPolicy(name: string): Promise<void>;
}
